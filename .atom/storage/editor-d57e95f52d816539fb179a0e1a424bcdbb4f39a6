{"mode":"editor","version":1,"windowDimensions":{"x":0,"y":23,"width":2560,"height":1417,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us"],"buffers":[{"id":"f124155432a4a7e394c2ecdf7d001d2b","text":"namespace :data_fixes do\n  namespace :us do\n    desc 'Sets account type for Cash in Hand to Cash for US'\n    task :set_cash_in_hand_account_type => :environment do\n      puts 'Setting Cash in Hand type to Cash for US'\n\n      sql_to_execute = <<-EOS\n        UPDATE localised_lookup_data SET local_name = 'Cash'\n        WHERE table_name = 'account_types' AND foreign_id = 5 AND locale = 'en_US'\n      EOS\n\n      ActiveRecord::Base.connection.execute(sql_to_execute)\n\n      puts 'Complete'\n    end\n\n    desc 'Update MS1 business info for all businesses that have completed the QSW'\n    task :qsw_force_ms1_update => :environment do\n      Rails.application.eager_load!\n\n      put_and_log('Starting update of MS1 business info')\n\n      businesses = []\n\n      Business.where(wizard_complete: true).each do |b|\n        begin\n          business_guid = b.sageone_guid\n          put_and_log \"Start processing business #{business_guid}\"\n          auth_attributes = { user_guid: b.owner.sageone_guid, business_guid: business_guid }\n          mysageone_attributes = GlobalAccountingBase::Handlers::QuickStart.generate_ms1_data(b)\n          GlobalAccountingBase::Jobs::MysageoneModelUpdater.queue(auth_attributes, mysageone_attributes)\n          businesses << business_guid\n          put_and_log \"Finished processing business #{business_guid}\"\n        rescue => e\n          put_and_log \"ERROR while processing business #{business_guid} - continuing with next record\\n#{e.message}\\n#{e.backtrace.join(\"\\n\")}\", :warn\n        end\n      end\n\n      put_and_log(\"Affected business sageone_guids:\\n#{businesses.join(\"\\n\")}\")\n      put_and_log('Finished update of MS1 business info')\n    end\n\n    desc 'Deletes tax rate percentages for combined tax rates'\n    task :delete_combined_tax_rate_percentages => :environment do\n      puts 'Deleting combined tax rate percentages'\n\n      sql_to_execute = <<-EOS\n      DELETE trp FROM tax_rate_percentages trp\n      INNER JOIN tax_rates\n      ON trp.tax_rate_id = tax_rates.id\n      WHERE tax_rates.combined = 1\n      EOS\n\n      ActiveRecord::Base.connection.execute(sql_to_execute)\n\n      puts 'Complete'\n    end\n\n    desc 'Update tax rates scope_id'\n    task :update_tax_rates_scope_id => :environment do\n      puts \"Start - Update tax rates scope_id\"\n\n      sql = <<-EOS\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"US:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.name NOT IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW' );\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"GB:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"218\" AND t1.name IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX');\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"IE:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"101\" AND t1.name IN ('IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW');\n      EOS\n\n      begin\n        sql.strip.split(';').each do |s|\n          ActiveRecord::Base.connection.execute(s)\n        end\n\n\n        puts \"Update tax rates scope_id complete...\"\n      rescue Exception => e\n        puts \"ERR!!!!: #{e}\"\n      end\n    end\n  end\nend\n\ndef put_and_log(message, type=:info)\n  message = \"#{Time.now} #{message}\"\n  puts message\n  if type == :warn\n    Rails.logger.warn message\n  else\n    Rails.logger.info message\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":69,"column":0},"end":{"row":69,"column":0}},"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":21,"undoStack":[{"type":"checkpoint","id":1,"snapshot":{"2":{"1":{"range":[[87,83],[87,83]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[87,83],[87,83]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[87,80],[87,91]],"newRange":[[87,80],[87,94]],"oldText":" type = \"\";","newText":" TYPE IS NULL;"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[87,94],[87,94]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":5,"snapshot":{"2":{"1":{"range":[[87,94],[87,94]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[87,94],[87,94]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[87,94],[87,94]],"newRange":[[87,94],[88,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[88,0],[88,0]],"newRange":[[88,0],[88,6]],"oldText":"","newText":"      "}},{"type":"change","content":{"oldRange":[[88,6],[88,6]],"newRange":[[88,6],[88,99]],"oldText":"","newText":"UPDATE tax_rate_percentages SET tax_rate_type = \"CoreAccounting::Taxes::Models::BaseTaxRate\";"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[88,99],[88,99]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":12,"snapshot":{"2":{"1":{"range":[[87,6],[87,6]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"checkpoint","id":15,"snapshot":{"2":{"1":{"range":[[88,99],[88,99]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[88,98],[88,98]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[87,0],[87,0]],"newRange":[[87,0],[88,0]],"oldText":"","newText":"      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE type = \"\";\n"}},{"type":"change","content":{"oldRange":[[88,0],[90,0]],"newRange":[[88,0],[88,0]],"oldText":"      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE TYPE IS NULL;\n      UPDATE tax_rate_percentages SET tax_rate_type = \"CoreAccounting::Taxes::Models::BaseTaxRate\";\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[88,0],[88,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[88,0],[88,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[57,0],[98,0]],"newRange":[[57,0],[57,0]],"oldText":"\n    desc 'Update tax rates scope_id'\n    task :update_tax_rates_scope_id => :environment do\n      puts \"Start - Update tax rates scope_id\"\n\n      sql = <<-EOS\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"US:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.name NOT IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW' );\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"GB:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"218\" AND t1.name IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX');\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"IE:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"101\" AND t1.name IN ('IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW');\n      EOS\n\n      begin\n        sql.strip.split(';').each do |s|\n          ActiveRecord::Base.connection.execute(s)\n        end\n\n\n        puts \"Update tax rates scope_id complete...\"\n      rescue Exception => e\n        puts \"ERR!!!!: #{e}\"\n      end\n    end\n\n    desc 'Add the ZeroTaxRate type and make sure that each tax rate has at least the generic type. Make sure all tax rates have a type'\n    task :add_zero_tax_rate => :environment do\n      puts 'Adding the ZeroTaxRate to seeded tax rates'\n\n      sql = <<-EOS\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"IRISH_ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE type = \"\";\n\n      UPDATE tax_rates SET is_system = '1' WHERE name in ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW')\n      EOS\n\n      sql.strip.split(';').each do |sql|\n        ActiveRecord::Base.connection.execute(sql)\n      end\n\n      puts 'Complete'\n    end\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[57,0],[57,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[69,0],[69,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[57,0],[57,0]],"newRange":[[57,0],[98,0]],"oldText":"","newText":"\n    desc 'Update tax rates scope_id'\n    task :update_tax_rates_scope_id => :environment do\n      puts \"Start - Update tax rates scope_id\"\n\n      sql = <<-EOS\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"US:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.name NOT IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW' );\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"GB:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"218\" AND t1.name IN ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX');\n      UPDATE tax_rates t1, (SELECT id, CONCAT(\"IE:\", scope_id) AS new_scope_id FROM tax_rates) t2 SET t1.scope_id = t2.new_scope_id WHERE t1.id = t2.id AND t1.scope_id = \"101\" AND t1.name IN ('IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW');\n      EOS\n\n      begin\n        sql.strip.split(';').each do |s|\n          ActiveRecord::Base.connection.execute(s)\n        end\n\n\n        puts \"Update tax rates scope_id complete...\"\n      rescue Exception => e\n        puts \"ERR!!!!: #{e}\"\n      end\n    end\n\n    desc 'Add the ZeroTaxRate type and make sure that each tax rate has at least the generic type. Make sure all tax rates have a type'\n    task :add_zero_tax_rate => :environment do\n      puts 'Adding the ZeroTaxRate to seeded tax rates'\n\n      sql = <<-EOS\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"IRISH_ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE type = \"\";\n\n      UPDATE tax_rates SET is_system = '1' WHERE name in ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW')\n      EOS\n\n      sql.strip.split(';').each do |sql|\n        ActiveRecord::Base.connection.execute(sql)\n      end\n\n      puts 'Complete'\n    end\n"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[110,0],[110,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[69,0],[69,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[87,0],[87,0]],"newRange":[[87,0],[89,0]],"oldText":"","newText":"      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE TYPE IS NULL;\n      UPDATE tax_rate_percentages SET tax_rate_type = \"CoreAccounting::Taxes::Models::BaseTaxRate\";\n"}},{"type":"change","content":{"oldRange":[[89,0],[90,0]],"newRange":[[89,0],[89,0]],"oldText":"      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE type = \"\";\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[69,0],[69,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[69,0],[69,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[79,0],[99,0]],"newRange":[[79,0],[79,0]],"oldText":"\n    desc 'Add the ZeroTaxRate type and make sure that each tax rate has at least the generic type. Make sure all tax rates have a type'\n    task :add_zero_tax_rate => :environment do\n      puts 'Adding the ZeroTaxRate to seeded tax rates'\n\n      sql = <<-EOS\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::ZeroTaxRate\" WHERE name = \"IRISH_ZERO\";\n      UPDATE tax_rates SET type = \"CoreAccounting::Taxes::Models::TaxRate\" WHERE TYPE IS NULL;\n      UPDATE tax_rate_percentages SET tax_rate_type = \"CoreAccounting::Taxes::Models::BaseTaxRate\";\n\n      UPDATE tax_rates SET is_system = '1' WHERE name in ('STANDARD', 'LOWER', 'ZERO', 'EXEMPT', 'NO_TAX', 'IRISH_STANDARD', 'IRISH_REDUCED_HIGH', 'IRISH_ZERO', 'IRISH_EXEMPT', 'IRISH_NO_TAX', 'IRISH_REDUCED_LOW')\n      EOS\n\n      sql.strip.split(';').each do |sql|\n        ActiveRecord::Base.connection.execute(sql)\n      end\n\n      puts 'Complete'\n    end\n","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[69,0],[69,0]],"properties":{"type":"selection","goalScreenRange":null,"autoscroll":false},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/tasks/data_fixes.rake","digestWhenLastPersisted":"b372a8e6eab32f457217fd963e7b6155bc86b8b9","preferredLineEnding":null,"nextMarkerId":6,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":67,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/tasks/data_fixes.rake","bufferId":"f124155432a4a7e394c2ecdf7d001d2b","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/tasks/data_fixes.rake","focused":false,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":["/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start/tax.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start/tax/state_message.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start/business_address.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/configurators/tax.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start/tax/sales_tax.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/assets/javascripts/widgets/ui_show_tax_rates.coffee","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/assets/javascripts/quick_start/controllers/quick_start_page_controller.coffee","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/sage_one_gac_us/handlers/quick_start/tax_operations.rb","/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/RELEASE_NOTES.md"]},"packageStates":{"fuzzy-finder":{"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/tasks/data_fixes.rake":1456334558644},"keybinding-resolver":{},"metrics":{"sessionLength":65533527},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},".idea":{"isExpanded":false,"entries":{}},".yardoc":{"isExpanded":false,"entries":{}},"config":{"isExpanded":false,"entries":{}},"coverage":{"isExpanded":false,"entries":{}},"db":{"isExpanded":false,"entries":{}},"lib":{"isExpanded":true,"entries":{"assets":{"isExpanded":false,"entries":{}},"sage_one_gac_us":{"isExpanded":false,"entries":{}},"tasks":{"isExpanded":true,"entries":{}}}},"script":{"isExpanded":false,"entries":{}},"seeds":{"isExpanded":true,"entries":{"data":{"isExpanded":false,"entries":{}}}},"soroban":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/victor.martins/Documents/SAGE/code/UK/sage_one_gac_us/lib/tasks/data_fixes.rake","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":319}},"fullScreen":false}