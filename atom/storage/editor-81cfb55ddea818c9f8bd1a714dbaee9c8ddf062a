{"version":1,"windowDimensions":{"x":0,"y":23,"width":1440,"height":877,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/victor.martins/Google Drive/_Projects/JArt/test","/Users/victor.martins/k9_samples/processing_app","/Users/victor.martins/Google Drive/_Projects/console_drawing_machine"],"buffers":[{"id":"5b33da46b92a385889d957349026810a","text":"# Triangles gone wild (class wrapped)\nclass TrianglesGoneWild < Processing::App\n  def settings\n    size 600, 600\n    smooth 8\n  end\n\n  def setup\n    sketch_title 'Triangles Gone Wild'\n    color_mode RGB, 1.0\n    frame_rate 30\n    fill 0.8, 0.6\n    @i = 1\n  end\n\n  def draw\n    @i += 1\n    puts \"i: #{@i}\"\n    ellipse(width/2, height/2, 10, 10);\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"21":{"range":{"start":{"row":17,"column":9},"end":{"row":17,"column":18}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"},"28":{"range":{"start":{"row":17,"column":13},"end":{"row":17,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":17,"column":16},"end":{"row":17,"column":16}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":101,"undoStack":[{"type":"checkpoint","id":2,"snapshot":{"2":{"1":{"range":[[15,26],[15,26]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,26],[15,26]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,12],[15,13]],"newRange":[[15,12],[15,12]],"oldText":"0","newText":""}},{"type":"change","content":{"oldRange":[[15,12],[15,12]],"newRange":[[15,12],[15,13]],"oldText":"","newText":"w"}},{"type":"change","content":{"oldRange":[[15,13],[15,13]],"newRange":[[15,13],[15,14]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[15,14],[15,14]],"newRange":[[15,14],[15,15]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[15,15],[15,15]],"newRange":[[15,15],[15,16]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[15,16],[15,16]],"newRange":[[15,16],[15,17]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[15,17],[15,17]],"newRange":[[15,17],[15,18]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[15,18],[15,18]],"newRange":[[15,18],[15,19]],"oldText":"","newText":"2"}},{"type":"change","content":{"oldRange":[[15,21],[15,22]],"newRange":[[15,21],[15,21]],"oldText":"0","newText":""}},{"type":"change","content":{"oldRange":[[15,21],[15,21]],"newRange":[[15,21],[15,22]],"oldText":"","newText":"j"}},{"type":"change","content":{"oldRange":[[15,22],[15,22]],"newRange":[[15,22],[15,23]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[15,23],[15,23]],"newRange":[[15,23],[15,24]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[15,24],[15,24]],"newRange":[[15,24],[15,25]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[15,24],[15,25]],"newRange":[[15,24],[15,24]],"oldText":"g","newText":""}},{"type":"change","content":{"oldRange":[[15,23],[15,24]],"newRange":[[15,23],[15,23]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[15,22],[15,23]],"newRange":[[15,22],[15,22]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[15,21],[15,22]],"newRange":[[15,21],[15,21]],"oldText":"j","newText":""}},{"type":"change","content":{"oldRange":[[15,21],[15,21]],"newRange":[[15,21],[15,22]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[15,22],[15,22]],"newRange":[[15,22],[15,23]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[15,23],[15,23]],"newRange":[[15,23],[15,24]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[15,24],[15,24]],"newRange":[[15,24],[15,25]],"oldText":"","newText":"g"}},{"type":"change","content":{"oldRange":[[15,25],[15,25]],"newRange":[[15,25],[15,26]],"oldText":"","newText":"h"}},{"type":"change","content":{"oldRange":[[15,26],[15,26]],"newRange":[[15,26],[15,27]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[15,27],[15,27]],"newRange":[[15,27],[15,28]],"oldText":"","newText":"/"}},{"type":"change","content":{"oldRange":[[15,28],[15,28]],"newRange":[[15,28],[15,29]],"oldText":"","newText":"2"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,29],[15,29]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":35,"snapshot":{"2":{"1":{"range":[[14,10],[14,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[14,10],[14,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[14,10],[14,10]],"newRange":[[14,10],[15,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[15,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[15,4],[15,4]],"newRange":[[15,4],[15,5]],"oldText":"","newText":"p"}},{"type":"change","content":{"oldRange":[[15,5],[15,5]],"newRange":[[15,5],[15,6]],"oldText":"","newText":"u"}},{"type":"change","content":{"oldRange":[[15,6],[15,6]],"newRange":[[15,6],[15,7]],"oldText":"","newText":"t"}},{"type":"change","content":{"oldRange":[[15,7],[15,7]],"newRange":[[15,7],[15,8]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[15,8],[15,8]],"newRange":[[15,8],[15,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[15,9],[15,9]],"newRange":[[15,9],[15,11]],"oldText":"","newText":"''"}},{"type":"change","content":{"oldRange":[[15,10],[15,10]],"newRange":[[15,10],[15,11]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[15,11],[15,11]],"newRange":[[15,11],[15,12]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[15,12],[15,12]],"newRange":[[15,12],[15,13]],"oldText":"","newText":"c"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,13],[15,13]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":49,"snapshot":{"2":{"1":{"range":[[15,11],[15,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,11],[15,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,11],[15,12]],"newRange":[[15,11],[15,11]],"oldText":"o","newText":""}},{"type":"change","content":{"oldRange":[[15,11],[15,11]],"newRange":[[15,11],[15,12]],"oldText":"","newText":"i"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[15,12],[15,12]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":53,"snapshot":{"2":{"1":{"range":[[11,17],[11,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[11,17],[11,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[11,17],[11,17]],"newRange":[[11,17],[12,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[12,0],[12,0]],"newRange":[[12,0],[12,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[12,4],[12,4]],"newRange":[[12,4],[12,5]],"oldText":"","newText":"@"}},{"type":"change","content":{"oldRange":[[12,5],[12,5]],"newRange":[[12,5],[12,6]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[12,5],[12,6]],"newRange":[[12,5],[12,5]],"oldText":" ","newText":""}},{"type":"change","content":{"oldRange":[[12,5],[12,5]],"newRange":[[12,5],[12,6]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[12,6],[12,6]],"newRange":[[12,6],[12,7]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[12,7],[12,7]],"newRange":[[12,7],[12,8]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[12,8],[12,8]],"newRange":[[12,8],[12,9]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[12,9],[12,9]],"newRange":[[12,9],[12,10]],"oldText":"","newText":"1"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[12,10],[12,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":66,"snapshot":{"2":{"1":{"range":[[15,10],[15,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[15,10],[15,10]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[15,10],[15,10]],"newRange":[[15,10],[16,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[16,4]],"oldText":"","newText":"    "}},{"type":"change","content":{"oldRange":[[16,4],[16,4]],"newRange":[[16,4],[16,5]],"oldText":"","newText":"@"}},{"type":"change","content":{"oldRange":[[16,5],[16,5]],"newRange":[[16,5],[16,6]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[16,6],[16,6]],"newRange":[[16,6],[16,7]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[16,7],[16,7]],"newRange":[[16,7],[16,8]],"oldText":"","newText":"+"}},{"type":"change","content":{"oldRange":[[16,8],[16,8]],"newRange":[[16,8],[16,9]],"oldText":"","newText":"="}},{"type":"change","content":{"oldRange":[[16,9],[16,9]],"newRange":[[16,9],[16,10]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[16,10],[16,10]],"newRange":[[16,10],[16,11]],"oldText":"","newText":"1"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[16,11],[16,11]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"checkpoint","id":77,"snapshot":{"2":{"1":{"range":[[17,14],[17,14]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}},"isBoundary":false},{"type":"group-start","snapshot":{"2":{"1":{"range":[[17,14],[17,14]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[17,13],[17,14]],"newRange":[[17,13],[17,13]],"oldText":"'","newText":""}},{"type":"change","content":{"oldRange":[[17,12],[17,13]],"newRange":[[17,12],[17,12]],"oldText":"c","newText":""}},{"type":"change","content":{"oldRange":[[17,11],[17,12]],"newRange":[[17,11],[17,11]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[17,10],[17,11]],"newRange":[[17,10],[17,10]],"oldText":"v","newText":""}},{"type":"change","content":{"oldRange":[[17,9],[17,10]],"newRange":[[17,9],[17,9]],"oldText":"'","newText":""}},{"type":"change","content":{"oldRange":[[17,9],[17,9]],"newRange":[[17,9],[17,11]],"oldText":"","newText":"\"\""}},{"type":"change","content":{"oldRange":[[17,10],[17,10]],"newRange":[[17,10],[17,11]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[17,11],[17,11]],"newRange":[[17,11],[17,12]],"oldText":"","newText":":"}},{"type":"change","content":{"oldRange":[[17,12],[17,12]],"newRange":[[17,12],[17,13]],"oldText":"","newText":" "}},{"type":"change","content":{"oldRange":[[17,13],[17,13]],"newRange":[[17,13],[17,16]],"oldText":"","newText":"#{}"}},{"type":"change","content":{"oldRange":[[17,15],[17,15]],"newRange":[[17,15],[17,16]],"oldText":"","newText":"i"}},{"type":"change","content":{"oldRange":[[17,15],[17,16]],"newRange":[[17,15],[17,15]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[17,15],[17,15]],"newRange":[[17,15],[17,16]],"oldText":"","newText":"@"}},{"type":"change","content":{"oldRange":[[17,16],[17,16]],"newRange":[[17,16],[17,17]],"oldText":"","newText":"i"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[17,17],[17,17]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/victor.martins/Google Drive/_Projects/JArt/test/test.rb","digestWhenLastPersisted":"173abc4a2dda51e043a65a1899bff8dea83422d9","preferredLineEnding":null,"nextMarkerId":43,"deserializer":"TextBuffer","version":5},{"id":"ae6535ace453e026374e1013ae7f51bd","text":"# Trefoil, by Andres Colubri\n# A parametric surface is textured procedurally\n# by drawing on an offscreen PGraphics surface.\n#\n# Features (Vec3D).to_normal(renderer) and (Vec3D).to_vertex_uv(renderer, u, v)\n# see line 62 for inititialization of renderer where obj is an instance of PShape\n# renderer = ShapeRender.new(obj)\n\nattr_reader :pg, :trefoil\n\ndef setup\n  sketch_title 'Trefoil'\n  texture_mode(NORMAL)\n  no_stroke\n  # Creating offscreen surface for 3D rendering.\n  @pg = create_graphics(32, 512, P3D)\n  pg.begin_draw\n  pg.background(0, 0)\n  pg.noStroke\n  pg.fill(255, 0, 0, 200)\n  pg.end_draw\n  # Saving trefoil surface into a PShape3D object\n  @trefoil = create_trefoil(350, 60, 15, pg)\nend\n\ndef draw\n  background(0)\n  pg.begin_draw\n  pg.ellipse(rand(0.0..pg.width), rand(0.0..pg.height), 4, 4)\n  pg.end_draw\n  ambient(250, 250, 250)\n  pointLight(255, 255, 255, 0, 0, 200)\n  push_matrix\n  translate(width/2, height/2, -200)\n  rotate_x(frame_count * PI / 500)\n  rotate_y(frame_count * PI / 500)\n  shape(trefoil)\n  pop_matrix\nend\n\n# Code to draw a trefoil knot surface, with normals and texture\n# coordinates. Makes of the Vec3D Render interface (uses ShapeRender here).\n# Adapted from the parametric equations example by Philip Rideout:\n# See http://chimera.labs.oreilly.com/books/1234000001814/index.html\n\n# This function draws a trefoil knot surface as a triangle mesh derived\n# from its parametric equation.\ndef create_trefoil(s, ny, nx, tex)\n  obj = create_shape\n  obj.begin_shape(TRIANGLES)\n  obj.texture(tex)\n  renderer = ShapeRender.new(obj)\n  (0 ... nx).each do |j|\n    u0 = j.to_f / nx\n    u1 = (j + 1).to_f / nx\n    (0 ... ny).each do |i|\n      v0 = i.to_f / ny\n      v1 = (i + 1).to_f / ny\n\n      p0 = eval_point(u0, v0)\n      n0 = eval_normal(u0, v0)\n\n      p1 = eval_point(u0, v1)\n      n1 = eval_normal(u0, v1)\n\n      p2 = eval_point(u1, v1)\n      n2 = eval_normal(u1, v1)\n\n      # Triangle p0-p1-p2\n      n0.to_normal(renderer)\n      (p0 * s).to_vertex_uv(renderer, u0, v0)\n      n1.to_normal(renderer)\n      (p1 * s).to_vertex_uv(renderer, u0, v1)\n      n2.to_normal(renderer)\n      (p2 * s).to_vertex_uv(renderer, u1, v1)\n\n      p1 = eval_point(u1, v0)\n      n1 = eval_normal(u1, v0)\n\n      # Triangle p0-p2-p1\n      n0.to_normal(renderer)\n      (p0 * s).to_vertex_uv(renderer, u0, v0)\n      n2.to_normal(renderer)\n      (p2 * s).to_vertex_uv(renderer, u1, v1)\n      n1.to_normal(renderer)\n      (p1 * s).to_vertex_uv(renderer, u1, v0)\n    end\n  end\n  obj.end_shape\n  return obj\nend\n\n# Evaluates the surface normal corresponding to normalized\n# parameters (u, v)\ndef eval_normal(u, v)\n  # Compute the tangents and their cross product.\n  p = eval_point(u, v)\n  tangU = eval_point(u + 0.01, v)\n  tangV = eval_point(u, v + 0.01)\n  tangU -= p\n  tangV -= p\n  tangV.cross(tangU).normalize! # it is easy to chain Vec3D operations\nend\n\n# Evaluates the surface point corresponding to normalized\n# parameters (u, v)\ndef eval_point(u, v)\n  a = 0.5\n  b = 0.3\n  c = 0.5\n  d = 0.1\n  s = TAU * u\n  t = (TAU * (1 - v)) * 2\n  sint = sin(t)\n  cost = cos(t)\n  sint15 = sin(1.5 * t)\n  cost15 = cos(1.5 * t)\n  r = a + b * cost15\n  x = r * cost\n  y = r * sint\n  z = c * sint15\n  dv = Vec3D.new(\n  -1.5 * b * sint15 * cost - y,\n  -1.5 * b * sint15 * sint + x,\n  1.5 * c * cost15)\n  q = dv.normalize     # regular normalize creates a new Vec3D for us\n  qvn = Vec3D.new(q.y, -q.x, 0).normalize!  # chained Vec3D operations\n  ww = q.cross(qvn)\n  coss = cos(s)\n  sins = sin(s)\n  Vec3D.new(\n  x + d * (qvn.x * coss + ww.x * sins),\n  y + d * (qvn.y * coss + ww.y * sins),\n  z + d * ww.z * sins)\nend\n\ndef settings\n  size(1024, 768, P3D)\nend\n\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/victor.martins/k9_samples/processing_app/demos/graphics/trefoil.rb","digestWhenLastPersisted":"21db76a1ba1b38e6897832371c4b642283e1025d","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"d5f24dce9125e4a178bfeb2b7d576661","text":"# Planets, by Andres Colubri\n#\n# Sun and mercury textures from http://planetpixelemporium.com\n# Star field picture from http://www.galacticimages.com/\n\nattr_reader :starfield, :sun, :suntex, :planet1, :surftex1, :cloudtex, :planet2, :surftex2\n\ndef setup\n  sketch_title 'Planets'\n  @starfield = load_image(\"starfield.jpg\")\n  @suntex = load_image(\"sun.jpg\")  \n  @surftex1 = load_image(\"planet.jpg\")    \n  @surftex2 = load_image(\"mercury.jpg\")  \n  no_stroke\n  fill(255)\n  sphere_detail(40)\n  @sun = create_shape(SPHERE, 150)\n  @sun.set_texture(suntex)  \n  @planet1 = create_shape(SPHERE, 150)\n  planet1.set_texture(surftex1)  \n  @planet2 = create_shape(SPHERE, 50)\n  planet2.set_texture(surftex2)\nend\n\ndef draw\n  # Even we draw a full screen image after this, it is recommended to use\n  # background to clear the screen anyways, otherwise A3D will think\n  # you want to keep each drawn frame in the framebuffer, which results in \n  # slower rendering.\n  background(0)  \n  # Disabling writing to the depth mask so the \n  # background image doesn't occludes any 3D object.\n  hint(DISABLE_DEPTH_MASK)\n  image(starfield, 0, 0, width, height)\n  hint(ENABLE_DEPTH_MASK)   \n  push_matrix\n  translate(width/2, height/2, -300)   \n  push_matrix\n  rotate_y(PI * frame_count / 500)\n  shape(sun)\n  pop_matrix\n  point_light(255,  255,  255,  0,  0,  0)  \n  rotate_y(PI * frame_count / 300)\n  translate(0, 0, 300)\n  shape(planet2)    \n  pop_matrix  \n  no_lights\n  point_light(255,  255,  255,  0,  0,  -150)   \n  translate(0.75 * width,  0.6 * height,  50)\n  shape(planet1)\nend\n\ndef settings\n  size(1024, 768, P3D)\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/victor.martins/k9_samples/processing_app/demos/graphics/planets.rb","digestWhenLastPersisted":"f1970394459df6f69859f68bb39e4d01879aa6a8","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5},{"id":"152c4ab8852d9d56b980fca582c7162a","text":"# Plots data into the screen matrix\nmodule Plotters\n  class SinWave\n    PRINT_CHAR = '.'\n\n    def initialize(interpolator: Interpolator)\n      @interpolator = interpolator\n    end\n\n    def plot(matrix, frame: 1)\n      n_r = matrix.length - 1\n      n_c = matrix.first.length - 1\n\n      y_calculator = interpolator.scale([-1, 1],[0, n_r]) # converts the range of sin to the range of the screen\n      x_calculator = interpolator.scale([0, n_c], [0, 360])  #converts the range of x in to the range of degrees\n\n      log(\"[#{frame}]\\n\")\n\n      # binding.pry\n      (0..n_c).each do |row|\n        cyclic_row =  (row + frame)%n_c\n        x_degrees = x_calculator.call(cyclic_row)\n        sin_y = Math.sin(to_radians(x_degrees)) # y is going to be between -1 and 1\n\n        line = y_calculator.call(sin_y).to_i\n\n        line = n_r - line #invert the wave since zero in our matrix is on top left\n        log(\"(#{row.to_s.ljust(4)}, #{line.to_s.ljust(4)})\")\n\n        matrix[line][row] = PRINT_CHAR\n      end\n      log(\"\\n\")\n\n      matrix\n    end\n\n    private\n    attr_reader :interpolator\n\n    def log(content)\n      File.open(\"logs/sin_wave.log\", 'a') {|f| f.write(content) }\n    end\n\n    def to_radians(degrees)\n      degrees * Math::PI / 180\n    end\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine/plotters/sin_wave.rb","digestWhenLastPersisted":"ab14dcf28e3def4952a5ab01838f53fbd56c0940","preferredLineEnding":null,"nextMarkerId":2,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":0,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/victor.martins/Google Drive/_Projects/JArt/test/test.rb","bufferId":"5b33da46b92a385889d957349026810a","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":20,"softTabs":true,"firstVisibleScreenRow":1,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine/plotters/sin_wave.rb","bufferId":"152c4ab8852d9d56b980fca582c7162a","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":12,"softTabs":true,"firstVisibleScreenRow":36,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":13,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/victor.martins/k9_samples/processing_app/demos/graphics/trefoil.rb","bufferId":"ae6535ace453e026374e1013ae7f51bd","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":16,"softTabs":true,"firstVisibleScreenRow":33,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":17,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/victor.martins/k9_samples/processing_app/demos/graphics/planets.rb","bufferId":"d5f24dce9125e4a178bfeb2b7d576661","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine/plotters/sin_wave.rb","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"fuzzy-finder":{"/Users/victor.martins/Google Drive/_Projects/JArt/test/test.rb":1456685982201,"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine/plotters/sin_wave.rb":1456685983026,"/Users/victor.martins/k9_samples/processing_app/demos/graphics/trefoil.rb":1456685743630,"/Users/victor.martins/k9_samples/processing_app/demos/graphics/planets.rb":1456685789477},"keybinding-resolver":{},"metrics":{"sessionLength":595095},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/victor.martins/Google Drive/_Projects/JArt/test":{"isExpanded":true,"entries":{}},"/Users/victor.martins/k9_samples/processing_app":{"isExpanded":true,"entries":{"basics":{"isExpanded":true,"entries":{"arrays":{"isExpanded":false,"entries":{}},"camera":{"isExpanded":false,"entries":{}},"color":{"isExpanded":false,"entries":{}},"control":{"isExpanded":false,"entries":{}},"data":{"isExpanded":false,"entries":{}},"form":{"isExpanded":false,"entries":{}},"image":{"isExpanded":false,"entries":{}},"input":{"isExpanded":false,"entries":{}},"lights":{"isExpanded":false,"entries":{}},"math":{"isExpanded":false,"entries":{}},"objects":{"isExpanded":false,"entries":{}},"shape":{"isExpanded":false,"entries":{}},"structure":{"isExpanded":false,"entries":{}},"textures":{"isExpanded":false,"entries":{}},"transform":{"isExpanded":false,"entries":{}},"typography":{"isExpanded":false,"entries":{}},"web":{"isExpanded":false,"entries":{}}}},"demos":{"isExpanded":true,"entries":{"graphics":{"isExpanded":true,"entries":{"data":{"isExpanded":false,"entries":{}}}},"performance":{"isExpanded":false,"entries":{}},"tests":{"isExpanded":false,"entries":{}}}},"library":{"isExpanded":false,"entries":{}},"topics":{"isExpanded":false,"entries":{}}}},"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"logs":{"isExpanded":false,"entries":{}},"plotters":{"isExpanded":true,"entries":{}},"printers":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/victor.martins/Google Drive/_Projects/console_drawing_machine/plotters/sin_wave.rb","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":435,"width":276}},"fullScreen":false}